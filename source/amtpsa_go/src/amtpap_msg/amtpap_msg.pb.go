// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: amtpap_msg.proto

package amtpap_msg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MsgType int32

const (
	MsgType_PUBLIC  MsgType = 0
	MsgType_PRIVATE MsgType = 1
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "PUBLIC",
		1: "PRIVATE",
	}
	MsgType_value = map[string]int32{
		"PUBLIC":  0,
		"PRIVATE": 1,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_amtpap_msg_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_amtpap_msg_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{0}
}

//Enum Naming Rules:	<type name>_V<version number>
//Enum Value Rules:	fixed 4 Bytes(High two bytes: Msg Type;		Low two bytes:Msg Version)
type MsgID int32

const (
	MsgID_RESERVE                  MsgID = 0
	MsgID_LOGIN_V1                 MsgID = 65537
	MsgID_LOGIN_V2                 MsgID = 65538 //Just for example Now
	MsgID_LOGIN_RESP_V1            MsgID = 131073
	MsgID_LOGOUT_V1                MsgID = 196609
	MsgID_LOGOUT_RESP_V1           MsgID = 262145
	MsgID_CONFIG_V1                MsgID = 327681
	MsgID_CONFIG_RESP_V1           MsgID = 393217
	MsgID_REPORT_EVENT_V1          MsgID = 458753
	MsgID_REPORT_EVENT_RESP_V1     MsgID = 524289
	MsgID_ALARM_V1                 MsgID = 589825
	MsgID_ALARM_RESP_V1            MsgID = 655361
	MsgID_ALARM_CLEAR_V1           MsgID = 720897
	MsgID_ALARM_CLEAR_RESP_V1      MsgID = 786433
	MsgID_GPS_INFO_V1              MsgID = 851969
	MsgID_GPS_INFO_RESP_V1         MsgID = 917505
	MsgID_STATUS_INFO_V1           MsgID = 983041
	MsgID_STATUS_INFO_RESP_V1      MsgID = 1048577
	MsgID_CONFIG_DATA_V1           MsgID = 1114113
	MsgID_CONFIG_DATA_RESP_V1      MsgID = 1179649
	MsgID_CONFIG_NOTIFY_V1         MsgID = 1245185
	MsgID_CONFIG_NOTIFY_RESP_V1    MsgID = 1310721
	MsgID_UPLOAD_FILE_V1           MsgID = 1376257
	MsgID_UPLOAD_FILE_RESP_V1      MsgID = 1441793
	MsgID_UPLOAD_EOF_V1            MsgID = 1507329
	MsgID_UPLOAD_EOF_RESP_V1       MsgID = 1572865
	MsgID_RESTART_CMD_V1           MsgID = 1638401
	MsgID_RESTART_CMD_RESP_V1      MsgID = 1703937
	MsgID_QUERY_DATA_V1            MsgID = 1769473
	MsgID_QUERY_DATA_RESP_V1       MsgID = 1835009
	MsgID_UPLOAD_FILE_DATA_V1      MsgID = 1900545
	MsgID_UPLOAD_FILE_DATA_RESP_V1 MsgID = 1966081
	MsgID_MODULE_CONF_V1           MsgID = 2031617
	MsgID_MODULE_CONF_RESP_V1      MsgID = 2097153
)

// Enum value maps for MsgID.
var (
	MsgID_name = map[int32]string{
		0:       "RESERVE",
		65537:   "LOGIN_V1",
		65538:   "LOGIN_V2",
		131073:  "LOGIN_RESP_V1",
		196609:  "LOGOUT_V1",
		262145:  "LOGOUT_RESP_V1",
		327681:  "CONFIG_V1",
		393217:  "CONFIG_RESP_V1",
		458753:  "REPORT_EVENT_V1",
		524289:  "REPORT_EVENT_RESP_V1",
		589825:  "ALARM_V1",
		655361:  "ALARM_RESP_V1",
		720897:  "ALARM_CLEAR_V1",
		786433:  "ALARM_CLEAR_RESP_V1",
		851969:  "GPS_INFO_V1",
		917505:  "GPS_INFO_RESP_V1",
		983041:  "STATUS_INFO_V1",
		1048577: "STATUS_INFO_RESP_V1",
		1114113: "CONFIG_DATA_V1",
		1179649: "CONFIG_DATA_RESP_V1",
		1245185: "CONFIG_NOTIFY_V1",
		1310721: "CONFIG_NOTIFY_RESP_V1",
		1376257: "UPLOAD_FILE_V1",
		1441793: "UPLOAD_FILE_RESP_V1",
		1507329: "UPLOAD_EOF_V1",
		1572865: "UPLOAD_EOF_RESP_V1",
		1638401: "RESTART_CMD_V1",
		1703937: "RESTART_CMD_RESP_V1",
		1769473: "QUERY_DATA_V1",
		1835009: "QUERY_DATA_RESP_V1",
		1900545: "UPLOAD_FILE_DATA_V1",
		1966081: "UPLOAD_FILE_DATA_RESP_V1",
		2031617: "MODULE_CONF_V1",
		2097153: "MODULE_CONF_RESP_V1",
	}
	MsgID_value = map[string]int32{
		"RESERVE":                  0,
		"LOGIN_V1":                 65537,
		"LOGIN_V2":                 65538,
		"LOGIN_RESP_V1":            131073,
		"LOGOUT_V1":                196609,
		"LOGOUT_RESP_V1":           262145,
		"CONFIG_V1":                327681,
		"CONFIG_RESP_V1":           393217,
		"REPORT_EVENT_V1":          458753,
		"REPORT_EVENT_RESP_V1":     524289,
		"ALARM_V1":                 589825,
		"ALARM_RESP_V1":            655361,
		"ALARM_CLEAR_V1":           720897,
		"ALARM_CLEAR_RESP_V1":      786433,
		"GPS_INFO_V1":              851969,
		"GPS_INFO_RESP_V1":         917505,
		"STATUS_INFO_V1":           983041,
		"STATUS_INFO_RESP_V1":      1048577,
		"CONFIG_DATA_V1":           1114113,
		"CONFIG_DATA_RESP_V1":      1179649,
		"CONFIG_NOTIFY_V1":         1245185,
		"CONFIG_NOTIFY_RESP_V1":    1310721,
		"UPLOAD_FILE_V1":           1376257,
		"UPLOAD_FILE_RESP_V1":      1441793,
		"UPLOAD_EOF_V1":            1507329,
		"UPLOAD_EOF_RESP_V1":       1572865,
		"RESTART_CMD_V1":           1638401,
		"RESTART_CMD_RESP_V1":      1703937,
		"QUERY_DATA_V1":            1769473,
		"QUERY_DATA_RESP_V1":       1835009,
		"UPLOAD_FILE_DATA_V1":      1900545,
		"UPLOAD_FILE_DATA_RESP_V1": 1966081,
		"MODULE_CONF_V1":           2031617,
		"MODULE_CONF_RESP_V1":      2097153,
	}
)

func (x MsgID) Enum() *MsgID {
	p := new(MsgID)
	*p = x
	return p
}

func (x MsgID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgID) Descriptor() protoreflect.EnumDescriptor {
	return file_amtpap_msg_proto_enumTypes[1].Descriptor()
}

func (MsgID) Type() protoreflect.EnumType {
	return &file_amtpap_msg_proto_enumTypes[1]
}

func (x MsgID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgID.Descriptor instead.
func (MsgID) EnumDescriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{1}
}

type CmdPrimitive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=amtpap_msg.MsgType" json:"type,omitempty"`
	SerialNumber uint32  `protobuf:"fixed32,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"` //Sequence Number
	MsgId        MsgID   `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3,enum=amtpap_msg.MsgID" json:"msg_id,omitempty"` //Refer to enum MsgID
	Direction    bool    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`                            //0:Downlink(Server to Client)	1:uplink(Client to Server)
	PayloadData  []byte  `protobuf:"bytes,5,opt,name=payload_data,json=payloadData,proto3" json:"payload_data,omitempty"`      //[bytes] Refer to Defination of CmdPrimitive.payload_data
}

func (x *CmdPrimitive) Reset() {
	*x = CmdPrimitive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdPrimitive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdPrimitive) ProtoMessage() {}

func (x *CmdPrimitive) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdPrimitive.ProtoReflect.Descriptor instead.
func (*CmdPrimitive) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{0}
}

func (x *CmdPrimitive) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_PUBLIC
}

func (x *CmdPrimitive) GetSerialNumber() uint32 {
	if x != nil {
		return x.SerialNumber
	}
	return 0
}

func (x *CmdPrimitive) GetMsgId() MsgID {
	if x != nil {
		return x.MsgId
	}
	return MsgID_RESERVE
}

func (x *CmdPrimitive) GetDirection() bool {
	if x != nil {
		return x.Direction
	}
	return false
}

func (x *CmdPrimitive) GetPayloadData() []byte {
	if x != nil {
		return x.PayloadData
	}
	return nil
}

//--- Defination of CmdPrimitive.payload_data Start ---
type LoginV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	//External Interface Parameters
	BoxId       string `protobuf:"bytes,1,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	Pwd         string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Manufactor  string `protobuf:"bytes,3,opt,name=manufactor,proto3" json:"manufactor,omitempty"`
	BeginTime   uint64 `protobuf:"varint,4,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"` //seconds from 1970-1-1
	EndTime     uint64 `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ReleaseId   uint32 `protobuf:"varint,6,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	JwumqId     string `protobuf:"bytes,7,opt,name=jwumq_id,json=jwumqId,proto3" json:"jwumq_id,omitempty"`
	ConfVersion uint32 `protobuf:"varint,8,opt,name=conf_version,json=confVersion,proto3" json:"conf_version,omitempty"`
}

func (x *LoginV1) Reset() {
	*x = LoginV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginV1) ProtoMessage() {}

func (x *LoginV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginV1.ProtoReflect.Descriptor instead.
func (*LoginV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{1}
}

func (x *LoginV1) GetBoxId() string {
	if x != nil {
		return x.BoxId
	}
	return ""
}

func (x *LoginV1) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *LoginV1) GetManufactor() string {
	if x != nil {
		return x.Manufactor
	}
	return ""
}

func (x *LoginV1) GetBeginTime() uint64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *LoginV1) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *LoginV1) GetReleaseId() uint32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *LoginV1) GetJwumqId() string {
	if x != nil {
		return x.JwumqId
	}
	return ""
}

func (x *LoginV1) GetConfVersion() uint32 {
	if x != nil {
		return x.ConfVersion
	}
	return 0
}

type LoginRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //refer to "message Token"
	//External Interface Parameters
	ConfVersion uint32 `protobuf:"varint,2,opt,name=conf_version,json=confVersion,proto3" json:"conf_version,omitempty"`
	Result      int32  `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LoginRespV1) Reset() {
	*x = LoginRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRespV1) ProtoMessage() {}

func (x *LoginRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRespV1.ProtoReflect.Descriptor instead.
func (*LoginRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *LoginRespV1) GetConfVersion() uint32 {
	if x != nil {
		return x.ConfVersion
	}
	return 0
}

func (x *LoginRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type LogoutV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
}

func (x *LogoutV1) Reset() {
	*x = LogoutV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutV1) ProtoMessage() {}

func (x *LogoutV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutV1.ProtoReflect.Descriptor instead.
func (*LogoutV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{3}
}

func (x *LogoutV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type LogoutRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LogoutRespV1) Reset() {
	*x = LogoutRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRespV1) ProtoMessage() {}

func (x *LogoutRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRespV1.ProtoReflect.Descriptor instead.
func (*LogoutRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *LogoutRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ConfigV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` //version number of current applied config
}

func (x *ConfigV1) Reset() {
	*x = ConfigV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigV1) ProtoMessage() {}

func (x *ConfigV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigV1.ProtoReflect.Descriptor instead.
func (*ConfigV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigV1) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ConfigRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Version     uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` //version number from server
	Result      int32  `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Update      bool   `protobuf:"varint,4,opt,name=update,proto3" json:"update,omitempty"`                              //true:need to update
	PacketCount int32  `protobuf:"varint,5,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"` //if update = false packet = 0;else .....
	Md5         string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`                                     //if update = false md5 is 0;else .....
}

func (x *ConfigRespV1) Reset() {
	*x = ConfigRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRespV1) ProtoMessage() {}

func (x *ConfigRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRespV1.ProtoReflect.Descriptor instead.
func (*ConfigRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigRespV1) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ConfigRespV1) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

func (x *ConfigRespV1) GetPacketCount() int32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *ConfigRespV1) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type ConfigNotifyV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Version     uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                            //version number from server
	PacketCount int32  `protobuf:"varint,3,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"` //if update = false packet = 0;else .....
	Md5         string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`                                     //if update = false md5 is 0;else .....
}

func (x *ConfigNotifyV1) Reset() {
	*x = ConfigNotifyV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigNotifyV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigNotifyV1) ProtoMessage() {}

func (x *ConfigNotifyV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigNotifyV1.ProtoReflect.Descriptor instead.
func (*ConfigNotifyV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigNotifyV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigNotifyV1) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigNotifyV1) GetPacketCount() int32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *ConfigNotifyV1) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type ConfigNotifyRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConfigNotifyRespV1) Reset() {
	*x = ConfigNotifyRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigNotifyRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigNotifyRespV1) ProtoMessage() {}

func (x *ConfigNotifyRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigNotifyRespV1.ProtoReflect.Descriptor instead.
func (*ConfigNotifyRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigNotifyRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigNotifyRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ConfigDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Version     uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` //version number from server
	PacketCount int32  `protobuf:"varint,3,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	PacketNo    int32  `protobuf:"varint,4,opt,name=packet_no,json=packetNo,proto3" json:"packet_no,omitempty"`
	DataLength  uint32 `protobuf:"varint,5,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`
	ConfigData  []byte `protobuf:"bytes,6,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
}

func (x *ConfigDataV1) Reset() {
	*x = ConfigDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDataV1) ProtoMessage() {}

func (x *ConfigDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDataV1.ProtoReflect.Descriptor instead.
func (*ConfigDataV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigDataV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigDataV1) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigDataV1) GetPacketCount() int32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *ConfigDataV1) GetPacketNo() int32 {
	if x != nil {
		return x.PacketNo
	}
	return 0
}

func (x *ConfigDataV1) GetDataLength() uint32 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *ConfigDataV1) GetConfigData() []byte {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

type ConfigDataRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Version  uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` //version number from server
	PacketNo int32  `protobuf:"varint,3,opt,name=packet_no,json=packetNo,proto3" json:"packet_no,omitempty"`
	Result   int32  `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConfigDataRespV1) Reset() {
	*x = ConfigDataRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDataRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDataRespV1) ProtoMessage() {}

func (x *ConfigDataRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDataRespV1.ProtoReflect.Descriptor instead.
func (*ConfigDataRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigDataRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConfigDataRespV1) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigDataRespV1) GetPacketNo() int32 {
	if x != nil {
		return x.PacketNo
	}
	return 0
}

func (x *ConfigDataRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ReportEventV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	TsSec     uint32 `protobuf:"varint,2,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`    //UTC Second
	TsUsec    uint32 `protobuf:"varint,3,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"` //microsecond
	Module    uint32 `protobuf:"varint,4,opt,name=module,proto3" json:"module,omitempty"`
	EventCode uint32 `protobuf:"varint,5,opt,name=event_code,json=eventCode,proto3" json:"event_code,omitempty"`
}

func (x *ReportEventV1) Reset() {
	*x = ReportEventV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportEventV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportEventV1) ProtoMessage() {}

func (x *ReportEventV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportEventV1.ProtoReflect.Descriptor instead.
func (*ReportEventV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{11}
}

func (x *ReportEventV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ReportEventV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *ReportEventV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

func (x *ReportEventV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *ReportEventV1) GetEventCode() uint32 {
	if x != nil {
		return x.EventCode
	}
	return 0
}

type ReportEventRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReportEventRespV1) Reset() {
	*x = ReportEventRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportEventRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportEventRespV1) ProtoMessage() {}

func (x *ReportEventRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportEventRespV1.ProtoReflect.Descriptor instead.
func (*ReportEventRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{12}
}

func (x *ReportEventRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ReportEventRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type AlarmV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Module     uint32 `protobuf:"varint,2,opt,name=module,proto3" json:"module,omitempty"`
	Seq        uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                                 //Terminal unique, used for AlarmClear
	AlarmCode  uint32 `protobuf:"varint,4,opt,name=alarm_code,json=alarmCode,proto3" json:"alarm_code,omitempty"`    //Enum (To Be Done)
	ReasonCode uint32 `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"` //Enum (To Be Done)
	TsSec      uint32 `protobuf:"varint,6,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`                //UTC Second
	TsUsec     uint32 `protobuf:"varint,7,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"`             //microsecond
}

func (x *AlarmV1) Reset() {
	*x = AlarmV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmV1) ProtoMessage() {}

func (x *AlarmV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmV1.ProtoReflect.Descriptor instead.
func (*AlarmV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{13}
}

func (x *AlarmV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AlarmV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *AlarmV1) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *AlarmV1) GetAlarmCode() uint32 {
	if x != nil {
		return x.AlarmCode
	}
	return 0
}

func (x *AlarmV1) GetReasonCode() uint32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *AlarmV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *AlarmV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

type AlarmRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AlarmRespV1) Reset() {
	*x = AlarmRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRespV1) ProtoMessage() {}

func (x *AlarmRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRespV1.ProtoReflect.Descriptor instead.
func (*AlarmRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{14}
}

func (x *AlarmRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AlarmRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type AlarmClearV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Module    uint32 `protobuf:"varint,2,opt,name=module,proto3" json:"module,omitempty"`
	Seq       uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                              //Terminal unique, used for AlarmClear
	AlarmCode uint32 `protobuf:"varint,4,opt,name=alarm_code,json=alarmCode,proto3" json:"alarm_code,omitempty"` //Enum (To Be Done)
	TsSec     uint32 `protobuf:"varint,5,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`             //UTC Second
	TsUsec    uint32 `protobuf:"varint,6,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"`          //microsecond
}

func (x *AlarmClearV1) Reset() {
	*x = AlarmClearV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmClearV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmClearV1) ProtoMessage() {}

func (x *AlarmClearV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmClearV1.ProtoReflect.Descriptor instead.
func (*AlarmClearV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{15}
}

func (x *AlarmClearV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AlarmClearV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *AlarmClearV1) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *AlarmClearV1) GetAlarmCode() uint32 {
	if x != nil {
		return x.AlarmCode
	}
	return 0
}

func (x *AlarmClearV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *AlarmClearV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

type AlarmClearRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AlarmClearRespV1) Reset() {
	*x = AlarmClearRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmClearRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmClearRespV1) ProtoMessage() {}

func (x *AlarmClearRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmClearRespV1.ProtoReflect.Descriptor instead.
func (*AlarmClearRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{16}
}

func (x *AlarmClearRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AlarmClearRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GPSInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Altitude  float32 `protobuf:"fixed32,4,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Speed     float32 `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Heading   float32 `protobuf:"fixed32,6,opt,name=heading,proto3" json:"heading,omitempty"`
	TsSec     uint32  `protobuf:"varint,7,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`    //UTC Second
	TsUsec    uint32  `protobuf:"varint,8,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"` //microsecond
}

func (x *GPSInfoV1) Reset() {
	*x = GPSInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSInfoV1) ProtoMessage() {}

func (x *GPSInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSInfoV1.ProtoReflect.Descriptor instead.
func (*GPSInfoV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{17}
}

func (x *GPSInfoV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GPSInfoV1) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GPSInfoV1) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GPSInfoV1) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *GPSInfoV1) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *GPSInfoV1) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *GPSInfoV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *GPSInfoV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

type GPSInfoRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GPSInfoRespV1) Reset() {
	*x = GPSInfoRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPSInfoRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPSInfoRespV1) ProtoMessage() {}

func (x *GPSInfoRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPSInfoRespV1.ProtoReflect.Descriptor instead.
func (*GPSInfoRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{18}
}

func (x *GPSInfoRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GPSInfoRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type StatusInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	PowerMode   uint32  `protobuf:"varint,2,opt,name=power_mode,json=powerMode,proto3" json:"power_mode,omitempty"`
	FilesLetf   uint32  `protobuf:"varint,3,opt,name=files_letf,json=filesLetf,proto3" json:"files_letf,omitempty"` //number of files to be upload
	Temperature float32 `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	DiskSpace   float32 `protobuf:"fixed32,5,opt,name=disk_space,json=diskSpace,proto3" json:"disk_space,omitempty"` //Disk free space(MB)
	TsSec       uint32  `protobuf:"varint,6,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`              //UTC Second
	TsUsec      uint32  `protobuf:"varint,7,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"`           //microsecond
}

func (x *StatusInfoV1) Reset() {
	*x = StatusInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoV1) ProtoMessage() {}

func (x *StatusInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoV1.ProtoReflect.Descriptor instead.
func (*StatusInfoV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{19}
}

func (x *StatusInfoV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *StatusInfoV1) GetPowerMode() uint32 {
	if x != nil {
		return x.PowerMode
	}
	return 0
}

func (x *StatusInfoV1) GetFilesLetf() uint32 {
	if x != nil {
		return x.FilesLetf
	}
	return 0
}

func (x *StatusInfoV1) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *StatusInfoV1) GetDiskSpace() float32 {
	if x != nil {
		return x.DiskSpace
	}
	return 0
}

func (x *StatusInfoV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *StatusInfoV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

type StatusInfoRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StatusInfoRespV1) Reset() {
	*x = StatusInfoRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoRespV1) ProtoMessage() {}

func (x *StatusInfoRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoRespV1.ProtoReflect.Descriptor instead.
func (*StatusInfoRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{20}
}

func (x *StatusInfoRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *StatusInfoRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type UploadFileV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Retransmit bool   `protobuf:"varint,3,opt,name=retransmit,proto3" json:"retransmit,omitempty"`
	Module     uint32 `protobuf:"varint,4,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *UploadFileV1) Reset() {
	*x = UploadFileV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileV1) ProtoMessage() {}

func (x *UploadFileV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileV1.ProtoReflect.Descriptor instead.
func (*UploadFileV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{21}
}

func (x *UploadFileV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadFileV1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileV1) GetRetransmit() bool {
	if x != nil {
		return x.Retransmit
	}
	return false
}

func (x *UploadFileV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

type UploadFileRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileId   uint32 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileSize uint32 `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Module   uint32 `protobuf:"varint,5,opt,name=module,proto3" json:"module,omitempty"`
	Result   int32  `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UploadFileRespV1) Reset() {
	*x = UploadFileRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRespV1) ProtoMessage() {}

func (x *UploadFileRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRespV1.ProtoReflect.Descriptor instead.
func (*UploadFileRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{22}
}

func (x *UploadFileRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadFileRespV1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileRespV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadFileRespV1) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadFileRespV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *UploadFileRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type UploadEofV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileName    string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileId      uint32 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	PacketCount uint32 `protobuf:"varint,4,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	TotalSize   uint32 `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Module      uint32 `protobuf:"varint,6,opt,name=module,proto3" json:"module,omitempty"`
	Md5         string `protobuf:"bytes,7,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *UploadEofV1) Reset() {
	*x = UploadEofV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadEofV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadEofV1) ProtoMessage() {}

func (x *UploadEofV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadEofV1.ProtoReflect.Descriptor instead.
func (*UploadEofV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{23}
}

func (x *UploadEofV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadEofV1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadEofV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadEofV1) GetPacketCount() uint32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *UploadEofV1) GetTotalSize() uint32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UploadEofV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *UploadEofV1) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type UploadEofRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileName    string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileId      uint32 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	PacketCount uint32 `protobuf:"varint,4,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	Module      uint32 `protobuf:"varint,5,opt,name=module,proto3" json:"module,omitempty"`
	Result      int32  `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UploadEofRespV1) Reset() {
	*x = UploadEofRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadEofRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadEofRespV1) ProtoMessage() {}

func (x *UploadEofRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadEofRespV1.ProtoReflect.Descriptor instead.
func (*UploadEofRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{24}
}

func (x *UploadEofRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadEofRespV1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadEofRespV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadEofRespV1) GetPacketCount() uint32 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *UploadEofRespV1) GetModule() uint32 {
	if x != nil {
		return x.Module
	}
	return 0
}

func (x *UploadEofRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type UploadFileDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileId   uint32 `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	PacketNo uint32 `protobuf:"varint,3,opt,name=packet_no,json=packetNo,proto3" json:"packet_no,omitempty"`
	DataLen  uint32 `protobuf:"varint,4,opt,name=data_len,json=dataLen,proto3" json:"data_len,omitempty"`
	Data     []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadFileDataV1) Reset() {
	*x = UploadFileDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileDataV1) ProtoMessage() {}

func (x *UploadFileDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileDataV1.ProtoReflect.Descriptor instead.
func (*UploadFileDataV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{25}
}

func (x *UploadFileDataV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadFileDataV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadFileDataV1) GetPacketNo() uint32 {
	if x != nil {
		return x.PacketNo
	}
	return 0
}

func (x *UploadFileDataV1) GetDataLen() uint32 {
	if x != nil {
		return x.DataLen
	}
	return 0
}

func (x *UploadFileDataV1) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadFileDataRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileId   uint32 `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	PacketNo uint32 `protobuf:"varint,3,opt,name=packet_no,json=packetNo,proto3" json:"packet_no,omitempty"`
	Result   int32  `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UploadFileDataRespV1) Reset() {
	*x = UploadFileDataRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileDataRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileDataRespV1) ProtoMessage() {}

func (x *UploadFileDataRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileDataRespV1.ProtoReflect.Descriptor instead.
func (*UploadFileDataRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{26}
}

func (x *UploadFileDataRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UploadFileDataRespV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UploadFileDataRespV1) GetPacketNo() uint32 {
	if x != nil {
		return x.PacketNo
	}
	return 0
}

func (x *UploadFileDataRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type QueryDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileId   uint32 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	PacketNo uint32 `protobuf:"varint,4,opt,name=packet_no,json=packetNo,proto3" json:"packet_no,omitempty"`
}

func (x *QueryDataV1) Reset() {
	*x = QueryDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataV1) ProtoMessage() {}

func (x *QueryDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataV1.ProtoReflect.Descriptor instead.
func (*QueryDataV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{27}
}

func (x *QueryDataV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *QueryDataV1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *QueryDataV1) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *QueryDataV1) GetPacketNo() uint32 {
	if x != nil {
		return x.PacketNo
	}
	return 0
}

type QueryDataRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *QueryDataRespV1) Reset() {
	*x = QueryDataRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataRespV1) ProtoMessage() {}

func (x *QueryDataRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataRespV1.ProtoReflect.Descriptor instead.
func (*QueryDataRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{28}
}

func (x *QueryDataRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *QueryDataRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ReatartCmdV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	TsSec  uint32 `protobuf:"varint,2,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`    //UTC Second
	TsUsec uint32 `protobuf:"varint,3,opt,name=ts_usec,json=tsUsec,proto3" json:"ts_usec,omitempty"` //microsecond
}

func (x *ReatartCmdV1) Reset() {
	*x = ReatartCmdV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReatartCmdV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReatartCmdV1) ProtoMessage() {}

func (x *ReatartCmdV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReatartCmdV1.ProtoReflect.Descriptor instead.
func (*ReatartCmdV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{29}
}

func (x *ReatartCmdV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ReatartCmdV1) GetTsSec() uint32 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *ReatartCmdV1) GetTsUsec() uint32 {
	if x != nil {
		return x.TsUsec
	}
	return 0
}

type ReatartRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReatartRespV1) Reset() {
	*x = ReatartRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReatartRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReatartRespV1) ProtoMessage() {}

func (x *ReatartRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReatartRespV1.ProtoReflect.Descriptor instead.
func (*ReatartRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{30}
}

func (x *ReatartRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ReatartRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ModuleConfV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	ChannelNum       uint32 `protobuf:"varint,2,opt,name=channel_num,json=channelNum,proto3" json:"channel_num,omitempty"`
	ModuleType       uint32 `protobuf:"varint,3,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	ChipManufacturer uint32 `protobuf:"varint,4,opt,name=chip_manufacturer,json=chipManufacturer,proto3" json:"chip_manufacturer,omitempty"`
	ChipType         string `protobuf:"bytes,5,opt,name=chip_type,json=chipType,proto3" json:"chip_type,omitempty"`
	IcdVersion       string `protobuf:"bytes,6,opt,name=icd_version,json=icdVersion,proto3" json:"icd_version,omitempty"`
	Imei             string `protobuf:"bytes,7,opt,name=imei,proto3" json:"imei,omitempty"`
	PhoneNumber      string `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	NetworkOperator  string `protobuf:"bytes,9,opt,name=network_operator,json=networkOperator,proto3" json:"network_operator,omitempty"`
}

func (x *ModuleConfV1) Reset() {
	*x = ModuleConfV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleConfV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleConfV1) ProtoMessage() {}

func (x *ModuleConfV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleConfV1.ProtoReflect.Descriptor instead.
func (*ModuleConfV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{31}
}

func (x *ModuleConfV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ModuleConfV1) GetChannelNum() uint32 {
	if x != nil {
		return x.ChannelNum
	}
	return 0
}

func (x *ModuleConfV1) GetModuleType() uint32 {
	if x != nil {
		return x.ModuleType
	}
	return 0
}

func (x *ModuleConfV1) GetChipManufacturer() uint32 {
	if x != nil {
		return x.ChipManufacturer
	}
	return 0
}

func (x *ModuleConfV1) GetChipType() string {
	if x != nil {
		return x.ChipType
	}
	return ""
}

func (x *ModuleConfV1) GetIcdVersion() string {
	if x != nil {
		return x.IcdVersion
	}
	return ""
}

func (x *ModuleConfV1) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ModuleConfV1) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ModuleConfV1) GetNetworkOperator() string {
	if x != nil {
		return x.NetworkOperator
	}
	return ""
}

type ModuleConfRespV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//SDK Internal parameters
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //[bytes] refer to Element "message Token"
	//External Interface Parameters
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ModuleConfRespV1) Reset() {
	*x = ModuleConfRespV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_amtpap_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleConfRespV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleConfRespV1) ProtoMessage() {}

func (x *ModuleConfRespV1) ProtoReflect() protoreflect.Message {
	mi := &file_amtpap_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleConfRespV1.ProtoReflect.Descriptor instead.
func (*ModuleConfRespV1) Descriptor() ([]byte, []int) {
	return file_amtpap_msg_proto_rawDescGZIP(), []int{32}
}

func (x *ModuleConfRespV1) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ModuleConfRespV1) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_amtpap_msg_proto protoreflect.FileDescriptor

var file_amtpap_msg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x6d, 0x74, 0x70, 0x61, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x61, 0x6d, 0x74, 0x70, 0x61, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xc7,
	0x01, 0x0a, 0x0c, 0x43, 0x6d, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x61, 0x6d, 0x74, 0x70, 0x61, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x61, 0x6d, 0x74, 0x70, 0x61, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xe9, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x56, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x77, 0x75, 0x6d, 0x71, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x77, 0x75, 0x6d, 0x71, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x56, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x56,
	0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x75, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x42, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8c, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74,
	0x73, 0x55, 0x73, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x41, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x56,
	0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xb9, 0x01, 0x0a, 0x07, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53,
	0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x73, 0x55, 0x73, 0x65, 0x63, 0x22, 0x3b, 0x0a, 0x0b, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53, 0x65, 0x63, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x73, 0x55, 0x73, 0x65, 0x63, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x09, 0x47,
	0x50, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x73,
	0x55, 0x73, 0x65, 0x63, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x50, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x5f, 0x6c, 0x65, 0x74, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x4c, 0x65, 0x74, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53, 0x65, 0x63,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x73, 0x55, 0x73, 0x65, 0x63, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x0c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45,
	0x6f, 0x66, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0xb0, 0x01, 0x0a,
	0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x8d, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x7a, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x76, 0x0a, 0x0b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x6f, 0x22, 0x3f, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x74, 0x61, 0x72, 0x74, 0x43,
	0x6d, 0x64, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x73, 0x53, 0x65,
	0x63, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x74, 0x73, 0x55, 0x73, 0x65, 0x63, 0x22, 0x3d, 0x0a, 0x0d, 0x52, 0x65,
	0x61, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x75,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63,
	0x68, 0x69, 0x70, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x63, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x63, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x40, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2a, 0x22, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56,
	0x41, 0x54, 0x45, 0x10, 0x01, 0x2a, 0x8f, 0x06, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x08,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x04, 0x12, 0x0e, 0x0a, 0x08,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x56, 0x32, 0x10, 0x82, 0x80, 0x04, 0x12, 0x13, 0x0a, 0x0d,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80,
	0x08, 0x12, 0x0f, 0x0a, 0x09, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x56, 0x31, 0x10, 0x81,
	0x80, 0x0c, 0x12, 0x14, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x10, 0x12, 0x0f, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x14, 0x12, 0x14, 0x0a, 0x0e, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x18, 0x12,
	0x15, 0x0a, 0x0f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x56, 0x31, 0x10, 0x81, 0x80, 0x1c, 0x12, 0x1a, 0x0a, 0x14, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81,
	0x80, 0x20, 0x12, 0x0e, 0x0a, 0x08, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x5f, 0x56, 0x31, 0x10, 0x81,
	0x80, 0x24, 0x12, 0x13, 0x0a, 0x0d, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x28, 0x12, 0x14, 0x0a, 0x0e, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x2c, 0x12, 0x19, 0x0a,
	0x13, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x30, 0x12, 0x11, 0x0a, 0x0b, 0x47, 0x50, 0x53, 0x5f,
	0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x34, 0x12, 0x16, 0x0a, 0x10, 0x47,
	0x50, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10,
	0x81, 0x80, 0x38, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x3c, 0x12, 0x19, 0x0a, 0x13, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31,
	0x10, 0x81, 0x80, 0x40, 0x12, 0x14, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x44, 0x12, 0x19, 0x0a, 0x13, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56,
	0x31, 0x10, 0x81, 0x80, 0x48, 0x12, 0x16, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x4c, 0x12, 0x1b, 0x0a,
	0x15, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x50, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x54,
	0x12, 0x19, 0x0a, 0x13, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x58, 0x12, 0x13, 0x0a, 0x0d, 0x55,
	0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x4f, 0x46, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x5c,
	0x12, 0x18, 0x0a, 0x12, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x4f, 0x46, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x60, 0x12, 0x14, 0x0a, 0x0e, 0x52, 0x45,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x64,
	0x12, 0x19, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x4d, 0x44, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x68, 0x12, 0x13, 0x0a, 0x0d, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x6c,
	0x12, 0x18, 0x0a, 0x12, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x70, 0x12, 0x19, 0x0a, 0x13, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56,
	0x31, 0x10, 0x81, 0x80, 0x74, 0x12, 0x1e, 0x0a, 0x18, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f, 0x56,
	0x31, 0x10, 0x81, 0x80, 0x78, 0x12, 0x14, 0x0a, 0x0e, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x5f, 0x56, 0x31, 0x10, 0x81, 0x80, 0x7c, 0x12, 0x1a, 0x0a, 0x13, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x5f,
	0x56, 0x31, 0x10, 0x81, 0x80, 0x80, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_amtpap_msg_proto_rawDescOnce sync.Once
	file_amtpap_msg_proto_rawDescData = file_amtpap_msg_proto_rawDesc
)

func file_amtpap_msg_proto_rawDescGZIP() []byte {
	file_amtpap_msg_proto_rawDescOnce.Do(func() {
		file_amtpap_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_amtpap_msg_proto_rawDescData)
	})
	return file_amtpap_msg_proto_rawDescData
}

var file_amtpap_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_amtpap_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_amtpap_msg_proto_goTypes = []interface{}{
	(MsgType)(0),                 // 0: amtpap_msg.MsgType
	(MsgID)(0),                   // 1: amtpap_msg.MsgID
	(*CmdPrimitive)(nil),         // 2: amtpap_msg.CmdPrimitive
	(*LoginV1)(nil),              // 3: amtpap_msg.LoginV1
	(*LoginRespV1)(nil),          // 4: amtpap_msg.LoginRespV1
	(*LogoutV1)(nil),             // 5: amtpap_msg.LogoutV1
	(*LogoutRespV1)(nil),         // 6: amtpap_msg.LogoutRespV1
	(*ConfigV1)(nil),             // 7: amtpap_msg.ConfigV1
	(*ConfigRespV1)(nil),         // 8: amtpap_msg.ConfigRespV1
	(*ConfigNotifyV1)(nil),       // 9: amtpap_msg.ConfigNotifyV1
	(*ConfigNotifyRespV1)(nil),   // 10: amtpap_msg.ConfigNotifyRespV1
	(*ConfigDataV1)(nil),         // 11: amtpap_msg.ConfigDataV1
	(*ConfigDataRespV1)(nil),     // 12: amtpap_msg.ConfigDataRespV1
	(*ReportEventV1)(nil),        // 13: amtpap_msg.ReportEventV1
	(*ReportEventRespV1)(nil),    // 14: amtpap_msg.ReportEventRespV1
	(*AlarmV1)(nil),              // 15: amtpap_msg.AlarmV1
	(*AlarmRespV1)(nil),          // 16: amtpap_msg.AlarmRespV1
	(*AlarmClearV1)(nil),         // 17: amtpap_msg.AlarmClearV1
	(*AlarmClearRespV1)(nil),     // 18: amtpap_msg.AlarmClearRespV1
	(*GPSInfoV1)(nil),            // 19: amtpap_msg.GPSInfoV1
	(*GPSInfoRespV1)(nil),        // 20: amtpap_msg.GPSInfoRespV1
	(*StatusInfoV1)(nil),         // 21: amtpap_msg.StatusInfoV1
	(*StatusInfoRespV1)(nil),     // 22: amtpap_msg.StatusInfoRespV1
	(*UploadFileV1)(nil),         // 23: amtpap_msg.UploadFileV1
	(*UploadFileRespV1)(nil),     // 24: amtpap_msg.UploadFileRespV1
	(*UploadEofV1)(nil),          // 25: amtpap_msg.UploadEofV1
	(*UploadEofRespV1)(nil),      // 26: amtpap_msg.UploadEofRespV1
	(*UploadFileDataV1)(nil),     // 27: amtpap_msg.UploadFileDataV1
	(*UploadFileDataRespV1)(nil), // 28: amtpap_msg.UploadFileDataRespV1
	(*QueryDataV1)(nil),          // 29: amtpap_msg.QueryDataV1
	(*QueryDataRespV1)(nil),      // 30: amtpap_msg.QueryDataRespV1
	(*ReatartCmdV1)(nil),         // 31: amtpap_msg.ReatartCmdV1
	(*ReatartRespV1)(nil),        // 32: amtpap_msg.ReatartRespV1
	(*ModuleConfV1)(nil),         // 33: amtpap_msg.ModuleConfV1
	(*ModuleConfRespV1)(nil),     // 34: amtpap_msg.ModuleConfRespV1
}
var file_amtpap_msg_proto_depIdxs = []int32{
	0, // 0: amtpap_msg.CmdPrimitive.type:type_name -> amtpap_msg.MsgType
	1, // 1: amtpap_msg.CmdPrimitive.msg_id:type_name -> amtpap_msg.MsgID
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_amtpap_msg_proto_init() }
func file_amtpap_msg_proto_init() {
	if File_amtpap_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_amtpap_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdPrimitive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigNotifyV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigNotifyRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDataRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportEventV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportEventRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmClearV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmClearRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPSInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPSInfoRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadEofV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadEofRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileDataRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReatartCmdV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReatartRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleConfV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_amtpap_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleConfRespV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_amtpap_msg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_amtpap_msg_proto_goTypes,
		DependencyIndexes: file_amtpap_msg_proto_depIdxs,
		EnumInfos:         file_amtpap_msg_proto_enumTypes,
		MessageInfos:      file_amtpap_msg_proto_msgTypes,
	}.Build()
	File_amtpap_msg_proto = out.File
	file_amtpap_msg_proto_rawDesc = nil
	file_amtpap_msg_proto_goTypes = nil
	file_amtpap_msg_proto_depIdxs = nil
}
